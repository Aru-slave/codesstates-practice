public class Solution { 
		public int[] swap(int idx1, int idx2, int[] arr) {
    //두 변수를 바꾸는 방법
    int temp = arr[idx1];
    arr[idx1] = arr[idx2];
    arr[idx2] = temp;

    //XOR 연산을 활용한 방법
    //arr이 reference type이라 가능
//     arr[idx1] ^= arr[idx2];
//     arr[idx2] ^= arr[idx1];
//     arr[idx1] ^= arr[idx2];

     return arr;
  }
   public int[] bubbleSort(int[] arr) {
      int arrLength = arr.length;

         for(int i = 0; i < arrLength - 1; i++) {
       //매 반복(iteration)마다 i번째로 큰 수가 마지막에서 i번째 위치하게 된다.
       //이미 정렬된 요소는 고려할 필요가 없으므로, 'j < N - 1 - i'만 비교하면 된다.
       //바깥 쪽 포문은 n 안쪽 포문은 1/2분의 n임으로 시간 복잡도는 기존의 n^2에서 0.5*n^2으로 줄어드는 것을 알 수 있다. 
      for(int j = 0; j < arrLength - 1 - i; j++) {
        if(arr[j] > arr[j + 1]) {
          arr = swap(j, j+1, arr);
        }
      }
    }
    return arr;
  }
}
